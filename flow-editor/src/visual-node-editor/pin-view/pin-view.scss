$PIN_RADIUS: 13px;
$WIRE_LENGTH: 10px;
$NODE_PIN_WIDTH: 20px;
$NODE_PIN_HEIGHT: 12px;

$MINIMIZED_PIN_SIZE: 14px;
$MINIMIZED_WIRE_LENGTH: 6px;

@mixin colored-pin($default, $hover, $selected, $dark-default) {
  .pin-inner {
    -webkit-font-smoothing: antialiased;
    &:not(.dark) {
      border-color: $default;
    }

    &.dark {
      border-color: $dark-default;
    }
  }

  &.closest:not(.selected),
  &:hover:not(.selected) {
    .pin-inner {
      border-color: $hover;
      border-style: dashed;
    }
  }

  &.selected {
    .pin-inner {
      &:not(.dark) {
        border-color: $selected;
        background: $gray-50;
      }

      &.dark {
        border-color: $default;
        background: $black;
      }
    }
  }
}

.pin {
  position: relative;
  z-index: 0; // decreased so output pin can be behind node when retracted

  display: flex;
  flex-direction: column;
  align-items: center;
  user-select: none;

  &:not(:last-of-type) {
    margin-right: 4px;
  }

  &:not(:first-of-type) {
    margin-left: 4px;
  }

  .wire {
    background: $gray-500;
    height: 100%;
    width: 2px;
    flex-grow: 1;
    min-height: $WIRE_LENGTH;
  }

  .pin-inner {
    border-radius: 5px;
    flex-shrink: 0;
    cursor: pointer;
    will-change: border;
    font-size: 12px;
    font-weight: 500;
    padding: 3px 5px;
    line-height: 1;

    border-width: 2px;
    border-style: solid;

    &:not(.dark) {
      background: $white;
      border-color: $gray-300;
    }

    &.dark {
      color: $neutral-50;
      background: $neutral-800;
      border-color: $gray-700;
    }

    white-space: nowrap;

    .suffix {
      color: #595959;
      margin-left: 3px;
      // margin-bottom: 2px;
    }
  }

  &.input {
    @include colored-pin($tblue-300, $tblue-500, $tblue-600, $tblue-700);
  }

  &.output {
    @include colored-pin($green-300, $green-500, $green-600, $green-700);
    flex-direction: column-reverse;
  }

  &[data-pin-id="__trigger"].input {
    @include colored-pin($purple-300, $purple-500, $purple-600, $purple-700);
  }

  &[data-pin-id="__error"] {
    @include colored-pin($red-300, $red-500, $red-600, $red-700);
  }

  &.has-value {
    &.output {
      .pin-inner {
        background: #ffe6de;
        // box-shadow: 0px 0px 4px 0px #4ccfec;
        // transition:f all ease-out 1.5s;
      }
    }
  }

  &.optional:not(.connected) .pin-inner {
    opacity: 0.7;
  }
}

.display-mode .pin-inner {
  font-size: 8px;
}

@at-root {
  .__react_component_tooltip.pin-info-tooltip {
    font-size: 14px;
    // min-width: 300px;
    max-width: 400px;
  }
}
